/* DuelSort.cpp : 2 - Spring 2016
Given the following two sorted arrays of integers:
A[0]..A[n-1],
B[0]..B[m-1].
Write an algorithm (using code) 
that merges the contents of A and B into a new sorted array of integers
C[0..n+m-1].
Your algorithm must run in O(n+m).
*/
#include "stdafx.h"
#include <cstdio>

int main()
{
	int A[] = { 2,3,5,8,10 };
	int B[] = { 1,4,6,7,9,11,12 };
	int C[12];

	int n = 5, m = 7;
	for (int i = 0, j = 0, k = 0; i<n || j<m; k++)
	{
		if(i == n)
		{
			C[k] = B[j];
			j++;
		}
		else if(j == m)
		{
			C[k] = A[i];
			i++;
		}
		else if (A[i] < B[j])
		{
			C[k] = A[i];
			i++;
		}
		else
		{
			C[k] = B[j];
			j++;
		}
		printf("%d\t", C[k]);
	}

	std::getchar();
    return 0;
}

